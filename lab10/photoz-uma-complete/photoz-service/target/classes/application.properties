server.port = 8081
keycloak.realm=photoz
keycloak.auth-server-url=http://localhost:8180/auth
keycloak.ssl-required=external
keycloak.resource=photoz-service
keycloak.public-client=false
keycloak.bearer-only=false
keycloak.credentials.secret=secret

keycloak.securityConstraints[0].securityCollections[0].name = protected resource
keycloak.securityConstraints[0].authRoles[0] = user
keycloak.securityConstraints[0].securityCollections[0].patterns[0] = /photoz
keycloak.securityConstraints[0].securityCollections[0].patterns[1] = /photoz/
keycloak.securityConstraints[0].securityCollections[0].patterns[2] = /photoz*
keycloak.securityConstraints[0].securityCollections[0].patterns[3] = /photoz/*

# This configuration enables the policy enforcer in order to protect resources served by this application.
# During the boot, the policy enforcer is going to fetch only the paths defined below and associate these paths with specific
#resources defined in Keycloak.
# When defining paths in the configuration, you are not really required to specify a URI for protected resources in Keycloak.
#keycloak.policy-enforcer-config.on-deny-redirect-to=/accessDenied

keycloak.policy-enforcer-config.enforcement-mode=PERMISSIVE
keycloak.policy-enforcer-config.paths[0].name=Photo Resource
keycloak.policy-enforcer-config.paths[0].path=/photoz/create
keycloak.policy-enforcer-config.paths[0].scopes[0]=photo:create

keycloak.policy-enforcer-config.paths[1].path=/photoz/{id}
keycloak.policy-enforcer-config.paths[1].methods[0].method=GET
keycloak.policy-enforcer-config.paths[1].methods[0].scopes[0]=photo:view-detail
keycloak.policy-enforcer-config.paths[1].methods[1].method=DELETE
keycloak.policy-enforcer-config.paths[1].methods[1].scopes[0]=photo:delete
